#!/bin/sh

# The time command results in quite many annoying error messages.

# Dette scriptet tar for seg utvalgte underomraader til omraadet
# /SI/hpassist/DEFECTS/defects_SIsolved . For hvert av disse underomraadene
# processeres  comandoene paa den locale filen reg.inp . Tidsforbruk 
# til den lokale filen reg.time*, hvor * er et tall.
# En global status fil for resultatet av kjoeringene paa alle underomraadene
# skrives ut paa filen reg.time_<progname>_<date>. som befinner seg paa
# det samme omraadet som dette scriptet.
#
# 981030: Legger til 'off' i "usage-listen". (jon)
#

# set -x
if [ "$#" -ne 1 ]
then
   echo "Usage: time_reg <progname>"
   echo "       progname can be test_SfSfIntersector (and possibly some others)"
   echo "Recommended use: time time_reg <progname>"
   exit 1
fi
prog_name=$1
cd ../..
intersection_dir=$PWD
app_dir=$intersection_dir/app
reg_test_dir=$intersection_dir/regression_tests
reg_dir=$reg_test_dir/regression
dir1=$reg_test_dir/defects/solved
# resolfile=RESOLUTION.inp
mach_name=`uname -n` #$HOSTNAME # We are creating different time-logs depending on machine we are running on.

echo "\c" > $reg_dir/reg.time_$mach_name
echo "\c" > $reg_dir/regression.diff

starttime=`date +%H:%M:%S\ %d/%m/%Y`
RESULTFILE=${reg_dir}/reg.time_${prog_name}_$mach_name #_`date +%y%m%d_%H:%M`
echo Test started\ \ at $starttime in `pwd` >$RESULTFILE

for direc in $dir1/int_dir_*  #2854
  do
  echo $direc > $reg_dir/curr_int_dir.tmp
  grep -l $prog_name $direc/reg.inp >/dev/null
  if [ $? = 0 ]
      then
      cd $direc
#       cp $reg_dir/$resolfile $resolfile > /dev/null 2>&1
      echo  "$direc/"
      echo "-----------------------------------" > $direc/reg.time_$mach_name
      echo  "$direc/" >> $direc/reg.time_$mach_name
      ifile=$direc/reg.inp
      itmp=$direc/inp.tmp
      cmdtmp=$direc/cmd.tmp # global loop variable
      numtmp=$direc/num.tmp # global loop variable
      
      date '+%y_%m_%d' > $numtmp
      < $numtmp read num
      ofile=$direc/reg.ver #$num
      ofiletmp=$direc/reg.ver.tmp
  
      if [ -f $ofile ] 
	  then 
	  mv $ofile ${ofile}.prev 
      fi

      echo  > $itmp
      echo  > $cmdtmp
      cmdline=""
      (while read w1 w2
	do
	if [ "$w1" = "*" ]
	    then
	    length=${#cmdline} # Number of characters
	    if [ $length != 0 ]
		then
		echo "cmdline: " $cmdline
		echo "-----------------------------------" >> $direc/reg.time_$mach_name
		if [ -f output.txt ]
		    then
		    echo "Removing output.txt"
		    rm output.txt
		fi
		(cat $itmp | /usr/bin/time -p $cmdline output.txt > $ofiletmp) 2> stderr.txt # (*)
		if [ -f output.txt ]
		    then
		    echo "Sorting result."
		    sort -n output.txt >> $ofile
		fi
		tail -n 3 stderr.txt >> $direc/reg.time_$mach_name
	    fi
	    echo  > $itmp
	    cmdline=$app_dir/$w2
	    echo $cmdline > $cmdtmp
	elif [ "$w1" = "%" ]
	    then
	    echo $w2 >> $itmp
	else
	    echo hei > /dev/null
	fi
      done < $ifile) 2>> $reg_dir/reg.time_$mach_name
      < $cmdtmp read cmdline
      if [ -f output.txt ]
	  then
	  echo "Removing output.txt"
	  rm output.txt
      fi
      < $itmp /usr/bin/time -p $cmdline output.txt > $ofiletmp 2> stderr.txt
      if [ -f output.txt ]
	  then
          # The last intersection call was run outside the loop.
	  echo "Sorting result."
	  sort -n output.txt >> $ofile
      fi
      echo "-----------------------------------" >> $direc/reg.time_$mach_name
      tail -n 3 stderr.txt >> $direc/reg.time_$mach_name # samme som (*)

      facit=$direc/reg.facit
      echo "$direc/" > $direc/reg.diff
      ls $facit > /dev/null 2>&1
      if [ $? != 0 ] 
	  then 
	  echo "Warning: facit not existing" >> $direc/reg.diff
      else
	  diff -b $ofile $facit >> $direc/reg.diff
      fi

      set `wc -l $direc/reg.diff`
      if [ $1 != 1 ]
	  then
	  cat $direc/reg.diff >> $reg_dir/regression.diff
      fi


      set `wc -l $direc/reg.time_$mach_name`
      if [ $1 != 1 ]
	  then
	  cat $direc/reg.time_$mach_name >> $reg_dir/reg.time_$mach_name
      fi


#       rm -f $resolfile > /dev/null 2>&1
      rm -f $ofiletmp
      rm -f $itmp
      rm -f $cmdtmp
      rm -f $numtmp
      rm -f $reg_dir/curr_int_dir.tmp
  fi
done

cd $reg_dir
echo Testing finished at `date +%H:%M:%S\ %d/%m/%Y` 		>> $RESULTFILE
echo  								>>$RESULTFILE
echo _________________________________________________________ 	>>$RESULTFILE
echo                regression.diff 			       	>>$RESULTFILE
echo _________________________________________________________ 	>>$RESULTFILE

cat $reg_dir/regression.diff 					>>$RESULTFILE

echo  								>>$RESULTFILE
echo _________________________________________________________ 	>>$RESULTFILE
echo                    reg.time_$mach_name		       	>>$RESULTFILE
echo _________________________________________________________ 	>>$RESULTFILE

cat $reg_dir/reg.time_$mach_name				>>$RESULTFILE

echo _________________________________________________________ 	>>$RESULTFILE
echo            END OF FILE $RESULTFILE			       	>>$RESULTFILE
echo _________________________________________________________ 	>>$RESULTFILE


# find $dir1 -name reg.diff -exec cat {} \; > $reg_dir/regression.diff







      
     
