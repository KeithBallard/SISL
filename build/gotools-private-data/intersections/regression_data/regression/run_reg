#!/bin/sh

# Dette scriptet tar for seg utvalgte underomraader til omraadet
# */intersections/defects/defects_SIsolved . For hvert av disse underomraadene
# processeres  kommandoene paa den locale filen reg.inp . Resultatet til
# disse kommandoene skrives til den lokale filen reg.ver*, hvor * er et tall.
# En global status fil for resultatet av kjoeringene paa alle underomraadene
# skrives ut paa filene regression.diff og reg.err som befinner seg paa
# det samme omraadet som dette scriptet.
#
# Dette scriptet forutsetter at paa de omraadene hvor det finnes en fil
# med navn reg.ver* saa er * et tall, og hvis det finnes mer enn en slik fil 
# paa ett bestemt directory, saa er disse nummerert i stigende rekkefoelge; 
# reg.ver1,reg.ver2,...,reg.vern , hvor n er antall filer med navn reg.ver* paa
# det aktuelle omraadet
# set -x

start_dir=`basename $PWD`
if [ "$start_dir" != "regression" ]
then
    echo "You must execute this script from the 'regression' directory!"
    echo "You're standing in $start_dir"
    exit 0
fi

cd ../..
intersection_dir=$PWD
app_dir=$intersection_dir/app
reg_test_dir=$intersection_dir/regression_tests
reg_dir=$reg_test_dir/regression
solved_dir=$reg_test_dir/defects/solved

#cd $reg_dir
# resolfile=$reg_test_dir/resolution.inp

output=$reg_test_dir/output.txt

echo "\c" > $reg_dir/reg.err
echo "\c" > $reg_dir/regression.diff

starttime=`date +%H:%M:%S\ %d/%m/%Y`
mach_name=`uname -n`
RESULTFILE=${reg_dir}/reg.all #_`uname -n` #_`date +%y%m%d_%H:%M`
echo Test started\ \ at $starttime in `pwd` >$RESULTFILE

for curr_dir in $solved_dir/int_dir_*
do
  echo $curr_dir > $reg_dir/curr_int_dir.tmp
  cd $curr_dir
#   cp $reg_dir/$resolfile $resolfile > /dev/null 2>&1
  echo  "$curr_dir/" > $curr_dir/reg.err
  ifile=$curr_dir/reg.inp
  itmp=$curr_dir/inp.tmp
  cmdtmp=$curr_dir/cmd.tmp # global loop variable
  numtmp=$curr_dir/num.tmp # global loop variable
  date '+%y_%m_%d' > $numtmp

  < $numtmp read num
  ofile=$curr_dir/reg.ver #$num
  ofiletmp=$curr_dir/reg.ver.tmp

  if [ -f $ofile ] 
    then 
       mv $ofile ${ofile}.prev
  fi

  echo  > $itmp
  echo  > $cmdtmp

  cmdline=

  (while read w1 w2
  do
     if [ "$w1" = "*" ]
	then
	 if [ -f $output ]
	     then
	     echo "Removing $output"
	     rm $output
	 fi
	   (cat $itmp |  $cmdline $output > $ofiletmp) 2>> $curr_dir/reg.err # (*)
	   if [ -f $output ]
	       then
	       echo "Sorting result."
	       sort -n $output >> $ofile
	   fi
	   echo  > $itmp
# 	   cmdline=$reg_dir/$w2
	   cmdline=$app_dir/$w2
	   echo "cmdline"
	   echo $cmdline
	   echo $cmdline > $cmdtmp
	elif [ "$w1" = "%" ]
	   then
	      echo $w2 >> $itmp
	else
	   echo hei > /dev/null
     fi
  done < $ifile) 2>> $reg_dir/reg.err

  # The last intersection call is run outside the loop.
  < $cmdtmp read cmdline
  if [ -f $output ]
      then
      echo "Removing $output"
      rm $output
  fi
  < $itmp $cmdline $output > $ofiletmp 2>> $curr_dir/reg.err # samme som (*)
  if [ -f $output ]
      then
      # The last intersection call was run outside the loop.
      echo "Sorting result."
      sort -n $output >> $ofile
  fi

  facit=$curr_dir/reg.facit
  echo "$curr_dir/" > $curr_dir/reg.diff
  ls $facit > /dev/null 2>&1
  if [ $? != 0 ] 
    then 
       echo "Warning: facit not existing" >> $curr_dir/reg.diff
    else
       diff -b $ofile $facit >> $curr_dir/reg.diff
  fi

  set `wc -l $curr_dir/reg.diff`
  if [ $1 != 1 ]
    then
	cat $curr_dir/reg.diff >> $reg_dir/regression.diff
  fi


  set `wc -l $curr_dir/reg.err`
  if [ $1 != 1 ]
    then
	cat $curr_dir/reg.err >> $reg_dir/reg.err
  fi

#   rm -f $resolfile > /dev/null 2>&1
  rm -f $ofiletmp
  rm -f $itmp
  rm -f $cmdtmp
  rm -f $numtmp
  rm -f $reg_dir/curr_int_dir.tmp
done

cd $reg_dir

echo Testing finished at `date +%H:%M:%S\ %d/%m/%Y`             >> $RESULTFILE
echo                                                            >>$RESULTFILE
echo _________________________________________________________  >>$RESULTFILE
echo                regression.diff                             >>$RESULTFILE
echo _________________________________________________________  >>$RESULTFILE

cat $reg_dir/regression.diff                                    >>$RESULTFILE

echo                                                            >>$RESULTFILE
echo _________________________________________________________  >>$RESULTFILE
echo                    reg.err                                >>$RESULTFILE
echo _________________________________________________________  >>$RESULTFILE

cat $reg_dir/reg.err           					>>$RESULTFILE

echo _________________________________________________________  >>$RESULTFILE
echo            END OF FILE $RESULTFILE                         >>$RESULTFILE
echo _________________________________________________________  >>$RESULTFILE


# find $solved_dir -name reg.diff -exec cat {} \; > $reg_dir/regression.diff







      
     
